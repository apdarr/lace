---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4.1-nano","messages":[{"role":"system","content":"You
        are a Ruby on Rails expert specializing in building ActiveRecord queries.
        Your job is to \ntranslate natural language requests about running activities
        into structured query parameters \nthat will be used to build safe ActiveRecord
        queries.\n\nIMPORTANT DATABASE INFORMATION:\n- The model is called ''Activity''\n-
        Distances are stored in METERS (not miles)\n- Times are stored in SECONDS\n-
        Heart rates are stored in BPM\n- Activity type is stored as a string (e.g.,
        \"Run\")\n\nREQUIRED CONVERSIONS:\n- 1 mile = 1609.34 meters\n- 1 km = 1000
        meters\n- 1 hour = 3600 seconds\n- 1 minute = 60 seconds\n\nCOLUMN REFERENCE:\n-
        distance (float): the distance in meters\n- elapsed_time (integer): duration
        in seconds\n- activity_type (string): type of activity (e.g., \"Run\") \n-
        kudos_count (integer): number of likes\n- average_heart_rate (float): average
        heart rate in BPM\n- max_heart_rate (float): maximum heart rate in BPM\n-
        start_date_local (datetime): when the activity started\n- created_at (datetime):
        when the record was created\n- updated_at (datetime): when the record was
        updated\n- strava_id (integer): Strava activity ID\n- plan_id (integer): associated
        training plan ID\n- description (string): activity description\n\nGUIDELINES:\n1.
        All queries automatically filter to activity_type = \"Run\"\n2. Convert all
        units appropriately (miles → meters, minutes → seconds)\n3. Handle relative
        terms appropriately:\n   - \"long runs\" → distance \u003e 16093.4 (10 miles
        in meters)\n   - \"short runs\" → distance \u003c 8046.7 (5 miles in meters)\n   -
        \"easy runs\" → average_heart_rate \u003c 130\n   - \"hard runs\" → average_heart_rate
        \u003e 150\n   - \"moderate runs\" → average_heart_rate between 130-150\n4.
        For distance ranges (e.g., \"20 mile runs\"), use BETWEEN with ±100 meter
        tolerance\n5. Return ONLY valid JSON with no explanations\n\nOUTPUT FORMAT:\nReturn
        a JSON object with the following structure:\n{\n  \"conditions\": [\n    {\n      \"column\":
        \"column_name\",\n      \"operator\": \"=|\u003e|\u003c|\u003e=|\u003c=|BETWEEN|LIKE|IN\",\n      \"value\":
        \"single_value_or_array_for_BETWEEN_and_IN\"\n    }\n  ],\n  \"order\": {\n    \"column\":
        \"column_name\",\n    \"direction\": \"asc|desc\"\n  },\n  \"limit\": integer_or_null\n}\n\nEXAMPLES:\n\nQuery:
        \"20 mile runs\"\n{\n  \"conditions\": [\n    {\n      \"column\": \"distance\",\n      \"operator\":
        \"BETWEEN\",\n      \"value\": [32086.8, 32286.8]\n    }\n  ],\n  \"order\":
        null,\n  \"limit\": null\n}\n\nQuery: \"runs longer than 10 km\"\n{\n  \"conditions\":
        [\n    {\n      \"column\": \"distance\",\n      \"operator\": \"\u003e\",\n      \"value\":
        10000\n    }\n  ],\n  \"order\": null,\n  \"limit\": null\n}\n\nQuery: \"easy
        runs under 30 minutes\"\n{\n  \"conditions\": [\n    {\n      \"column\":
        \"average_heart_rate\",\n      \"operator\": \"\u003c\",\n      \"value\":
        130\n    },\n    {\n      \"column\": \"elapsed_time\",\n      \"operator\":
        \"\u003c\",\n      \"value\": 1800\n    }\n  ],\n  \"order\": null,\n  \"limit\":
        null\n}\n\nQuery: \"my hardest runs with the most kudos\"\n{\n  \"conditions\":
        [\n    {\n      \"column\": \"average_heart_rate\",\n      \"operator\": \"\u003e\",\n      \"value\":
        150\n    }\n  ],\n  \"order\": {\n    \"column\": \"kudos_count\",\n    \"direction\":
        \"desc\"\n  },\n  \"limit\": null\n}\n\nQuery: \"my fastest 5k runs\"\n{\n  \"conditions\":
        [\n    {\n      \"column\": \"distance\",\n      \"operator\": \"BETWEEN\",\n      \"value\":
        [4900, 5100]\n    }\n  ],\n  \"order\": {\n    \"column\": \"elapsed_time\",\n    \"direction\":
        \"asc\"\n  },\n  \"limit\": null\n}\n\nRESPONSE FORMAT:\nReturn ONLY valid
        JSON with no extra text or explanations.\n"},{"role":"user","content":"Convert
        this natural language query to query parameters: activities longer than 10km"}],"temperature":0.1}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <BEARER_TOKEN>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 01 Jun 2025 00:22:41 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-tbsiv6gxqzvfwv39e4zjbvuw
      Openai-Processing-Ms:
      - '599'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '612'
      X-Ratelimit-Limit-Requests:
      - '500'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '499'
      X-Ratelimit-Remaining-Tokens:
      - '199135'
      X-Ratelimit-Reset-Requests:
      - 120ms
      X-Ratelimit-Reset-Tokens:
      - 259ms
      X-Request-Id:
      - req_426af1b5e94f4f483142e5f84984a168
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=yFg51NfHVK6iucsKZB0pYQvdUepivGlvBDHOPlvkwko-1748737361-1.0.1.1-nj3QprjWFTtvpuXiUWOEEPIWRtT9TiaHBb9473riKGnbS.HMF5L0UUJt02TCPd7hI5mDDjWgNaKBSg7sN3w2IEHRFKhht1h6kZP8rTdsMU8;
        path=/; expires=Sun, 01-Jun-25 00:52:41 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=UroCj.2fnzMngJi_PKkJM5TXXyyHjTzkn1EPPM_jLns-1748737361844-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 948a8ed6bff8a94e-DTW
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BdQlFyQcHHgM1CvkyXYaX7FJ68Ro2",
          "object": "chat.completion",
          "created": 1748737361,
          "model": "gpt-4.1-nano-2025-04-14",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\n  \"conditions\": [\n    {\n      \"column\": \"distance\",\n      \"operator\": \">\",\n      \"value\": 10000\n    }\n  ],\n  \"order\": null,\n  \"limit\": null\n}",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 954,
            "completion_tokens": 46,
            "total_tokens": 1000,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_f12167b370"
        }
  recorded_at: Sun, 01 Jun 2025 00:22:41 GMT
recorded_with: VCR 6.3.1
